name: Version Bump

on:
  push:
    branches:
      - master

jobs:
  version-bump:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Determine version change
      id: version-change
      run: |
        version=$(grep -oP '(?<=version: v)(\d+\.\d+\.)(\d+)' app.yml)
        git fetch origin master
        changed_files=$(git diff --name-only HEAD..origin/master)
        if [[ $changed_files =~ "app.yml" && $(git rev-list --count HEAD..origin/master) -gt 1 ]]; then
          echo "::set-output name=version_change::true"
        else
          echo "::set-output name=version_change::false"
        fi

    - name: Increment version
      id: bump
      run: |
        should_increment=${{ steps.version-change.outputs.version_change }}
        if [[ $should_increment == "true" ]]; then
          version=$(grep -oP '(?<=version: v)(\d+\.\d+\.)(\d+)' app.yml)
          new_version=$(echo $version | awk -F. '{$NF = $NF + 1;} 1' OFS=.)
          sed -i "s/version: v$version/version: v$new_version/" app.yml
          echo "::set-output name=new_version::$new_version"
        else
          echo "::set-output name=new_version::"
        fi

    - name: Commit and push changes
      if: steps.bump.outputs.new_version != ''
      run: |
        git config --local user.name "GitHub Actions"
        git config --local user.email "actions@github.com"
        git commit -am "Bump version"
        git push

    - name: Set new version as output
      if: steps.bump.outputs.new_version != ''
      run: echo "New version is ${{ steps.bump.outputs.new_version }}"
